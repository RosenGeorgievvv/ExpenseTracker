{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseFilter.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","items","filter","expense","toString","selectedYear","map","id","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","max","NewExpense","enteredExpenseData","Math","random","onAddExpense","DUMMY_EXPENSES","App","expenses","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bfa8c124.chunk.js","sourcesContent":["import './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props) {\r\n\r\n    const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n    const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n    const year = props.date.getFullYear();\r\n\r\n    return ( <\r\n        div className = \"expense-date\" >\r\n        <\r\n        div className = \"expense-date_month\" > { month } < /div> <\r\n        div className = \"expense-date_year\" > { year } < /div> <\r\n        div className = \"expense-date_day\" > { day } < /div> <\r\n        /div>\r\n    );\r\n}\r\nexport default ExpenseDate;","import './Card.css';\r\n\r\nfunction Card(props) {\r\n    const classes = 'card ' + props.className;\r\n    return <div className = { classes } > { props.children } < /div>\r\n}\r\nexport default Card","import React from 'react';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport './ExpenseItem.css';\r\nimport Card from '../UI/Card';\r\n\r\nconst ExpenseItem = (props) => {\r\n\r\n    return ( <\r\n        Card className = \"expense-item\" >\r\n        <\r\n        ExpenseDate date = { props.date }\r\n        /> <\r\n        div className = \"expense-item_description\" >\r\n        <\r\n        h2 > { props.title } < /h2> <\r\n        div className = \"expense-item_price\" > $ { props.amount } < /div> <\r\n        /div> <\r\n        /Card>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react';\r\nimport './ExpenseFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n    const dropdownChangeHandler = (event) => {\r\n        props.onChangeFilter(event.target.value)\r\n\r\n    }\r\n\r\n\r\n    return ( <\r\n        div className = 'expenses-filter' >\r\n        <\r\n        div className = 'expenses-filter_control' >\r\n        <\r\n        label > Filter by year < /label> <\r\n        select value = { props.selected }\r\n        onChange = { dropdownChangeHandler } >\r\n        <\r\n        option value = '2022' > 2022 < /option> <\r\n        option value = '2021' > 2021 < /option> <\r\n        option value = '2020' > 2020 < /option> <\r\n        option value = '2019' > 2019 < /option> <\r\n        /select> <\r\n        /div> <\r\n        /div>\r\n    );\r\n}\r\n\r\nexport default ExpensesFilter;","import React, { useState } from 'react';\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport './Expenses.css'\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from './ExpenseFilter'\r\n\r\n\r\nconst Expenses = (props) => {\r\n    const [filteredYear, setFilteredYear] = useState('2021');\r\n\r\n    const filterChangeHandler = selectedYear => {\r\n        setFilteredYear(selectedYear);\r\n    }\r\n\r\n    const filteredExpenses = props.items.filter(expense => {\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    });\r\n    return ( <\r\n        div >\r\n        <\r\n        Card className = 'expenses' >\r\n        <\r\n        ExpensesFilter selected = { filteredYear }\r\n        onChangeFilter = { filterChangeHandler }\r\n        /> {\r\n            filteredExpenses.map((expense) => ( <\r\n                ExpenseItem key = { expense.id }\r\n                title = { expense.title }\r\n                amount = { expense.amount }\r\n                date = { expense.date }\r\n                />\r\n            ))\r\n        } <\r\n        /Card> <\r\n        /div>\r\n    )\r\n}\r\nexport default Expenses;","import React, { useState } from \"react\";\r\nimport './ExpenseForm.css';\r\n\r\n\r\nconst ExpenseForm = (props) => {\r\n\r\n        const [enteredTitle, setEnteredTitle] = useState('');\r\n        const [enteredAmount, setEnteredAmount] = useState('');\r\n        const [enteredDate, setEnteredDate] = useState('');\r\n\r\n        //alternative\r\n        // const [userInput, setUserInput] = useState({\r\n        //     enteredTitle: '',\r\n        //     enteredAmount: '',\r\n        //     enteredDate: ''\r\n        // })\r\n\r\n        const titleChangeHandler = (event) => {\r\n            setEnteredTitle(event.target.value)\r\n\r\n            //alternative\r\n            // setUserInput({\r\n            //     ...userInput,\r\n            //     enteredTitle: event.target.value,\r\n            // })\r\n        };\r\n\r\n        const amountChangeHandler = (event) => {\r\n            setEnteredAmount(event.target.value);\r\n\r\n            //alternative\r\n            // setUserInput({\r\n            //     ...userInput,\r\n            //     enteredAmount: event.target.value,\r\n            // })\r\n        };\r\n\r\n        const dateChangeHandler = (event) => {\r\n            setEnteredDate(event.target.value);\r\n\r\n            //alternative\r\n            // setUserInput({\r\n            //     ...userInput,\r\n            //     enteredDate: event.target.value,\r\n            // })\r\n        };\r\n\r\n        const submitHandler = (event) => {\r\n            event.preventDefault();\r\n\r\n\r\n            const expenseData = {\r\n                title: enteredTitle,\r\n                amount: enteredAmount,\r\n                date: new Date(enteredDate)\r\n            };\r\n\r\n            props.onSaveExpenseData(expenseData)\r\n            setEnteredTitle('');\r\n            setEnteredAmount('');\r\n            setEnteredDate('');\r\n\r\n        };\r\n\r\n\r\n        return ( <\r\n            form onSubmit = { submitHandler } >\r\n            <\r\n            div className = \"new-expense_controls\" >\r\n            <\r\n            div className = \"new-expense_control\" >\r\n            <\r\n            label > Title < /label> <\r\n            input type = \"text\"\r\n            value = { enteredTitle }\r\n            onChange = { titleChangeHandler }\r\n            /> <\r\n            /div> <\r\n            div className = \"new-expense_control\" >\r\n            <\r\n            label > Amount < /label> <\r\n            input type = \"number\"\r\n            min = \"0.01\"\r\n            step = \"0.01\"\r\n            value = { enteredAmount }\r\n            onChange = { amountChangeHandler }\r\n            /> <\r\n            /div> <\r\n            div className = \"new-expense_control\" >\r\n            <\r\n            label > Date < /label> <\r\n            input type = \"date\"\r\n            min = \"2019-01-01\"\r\n            max = \"2022-12-31\"\r\n            value = { enteredDate }\r\n            onChange = { dateChangeHandler }\r\n            /> <\r\n            /div> <\r\n            /div> <\r\n            div className = \"new-expense_actions\" >\r\n            <\r\n            button type = \"submit\" > Add Expense < /button> <\r\n            /div> <\r\n            /form>)\r\n        }\r\n        export default ExpenseForm","import React from \"react\";\r\nimport './NewExpense.css';\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n\r\n    const saveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString(),\r\n        }\r\n        props.onAddExpense(expenseData)\r\n    }\r\n\r\n    return ( <\r\n        div className = \"new-expense\" >\r\n        <\r\n        ExpenseForm onSaveExpenseData = { saveExpenseDataHandler }\r\n        /> <\r\n        /div>\r\n    );\r\n};\r\n\r\nexport default NewExpense;","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [{\n        id: 'e1',\n        title: 'Toilet Paper',\n        amount: 94.12,\n        date: new Date(2020, 7, 14)\n    },\n    { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 21) },\n    {\n        id: 'e3',\n        title: 'Car Insurance',\n        amount: 294.67,\n        date: new Date(2021, 2, 28)\n    },\n    {\n        id: 'e4',\n        title: 'New Desk (Wooden)',\n        amount: 450,\n        date: new Date(2021, 5, 12)\n    }\n];\n\n\nfunction App() {\n\n    const [expenses, setExpenses] = useState(DUMMY_EXPENSES)\n\n    const addExpenseHandler = expense => {\n        setExpenses(prevExpenses => {\n            return [expense, ...prevExpenses]\n        });\n    };\n\n\n    return ( <\n        div >\n        <\n        NewExpense onAddExpense = { addExpenseHandler }\n        /> <\n        Expenses items = { expenses }\n        /> <\n        /div>\n    );\n}\n\nexport default App;","import ReactDOM from 'react-dom';\n\nimport '../src/index.css';\nimport App from './App';\n\nReactDOM.render( < App / > , document.getElementById('root'));"],"sourceRoot":""}